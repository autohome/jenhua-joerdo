/* function fetchTopSearch (topSearch) {
	topSearch = topSearch.split(' ')
	topSearch = topSearch.join('+')
	console.log(gdataBaseUrl + topSearch + gdataKey)
    fetch(gdataBaseUrl + topSearch + gdataKey, options)
        .then(function(response) {
            if (!response.ok) {
                throw new Error('Failed to get google data.');
            }
            return response.json();
        })
        .then(function(data) {
            // handle the response data
            console.log(data);
        })
        .catch(function(error) {
            console.log('Error: ' + error.message);
        })
        .finally(function() {
            // re-render the city list after the weather data has been retrieved
            // renderCityList();
        });
	},
		'X-RapidAPI-Host': 'google-data-scraper.p.rapidapi.com'
	}
};

var gdataBaseUrl = 'https://google-data-scraper.p.rapidapi.com/search/shop/'
var gdataKey = '?api_key=1cbefa30f9ed00f3afb422efeda5fd3b'


// fetch(gdataBaseUrl + topSearch + gdataKey, options)
// 	.then(response => response.json())
// 	.then(response => console.log(response))

// 	.catch(err => console.error(err));


function fetchTopSearch (topSearch) {
	topSearch = topSearch.split(' ')
	topSearch = topSearch.join('+')
	console.log(gdataBaseUrl + topSearch + gdataKey)
    fetch(gdataBaseUrl + topSearch + gdataKey, options)
        .then(function(response) {
            if (!response.ok) {
                throw new Error('Failed to get google data.');
            }
            return response.json();
        })
        .then(function(data) {
            // handle the response data
            console.log(data);
        })
        .catch(function(error) {
            console.log('Error: ' + error.message);
        })
        .finally(function() {
            // re-render the city list after the weather data has been retrieved
            // renderCityList();
        });
	}
    
    
    
    const options = {
  method: "POST",
  headers: {
    "content-type": "application/json",
    "X-RapidAPI-Key": "850e1c49e3mshddc8bd01f4fe44ep17cf84jsnac7e75fad992",
    "X-RapidAPI-Host": "you-chat-gpt.p.rapidapi.com",
  },
  body: '{"question":"list 10 ways to become a better programmer?","max_response_time":10
    
    "messages": [{"role": "system", "content": "As a personal shopper, your task is to plan an outfit for a specific occasion using up to 3 items, which may include shoes and accessories. Youll be given limited details about the selected items, and your output will be the outfits description. Please make sure to return the information in a format suitable for searching through a search engine."},{"role": "user","content": "Id like an outfit with up to 3 items for an occasion."},{"role": "assistant","content": "Here are three items for you to choose from."}],"temperature": 0.6}',
};
fetch("https://you-chat-gpt.p.rapidapi.com/TextOnly", options)
  .then((response) => response.json())
  .then((response) => console.log(response))
.catch((err) => console.error(err))

const url = ('https://api.openai.com/v1/models');
const key = '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';
const org = 'org-5dysQEALkmlmzOv27vZ7BLhR';



const url = ('https://api.openai.com/v1/models');
const key = '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';
const org = 'org-5dysQEALkmlmzOv27vZ7BLhR';

const options = {
    method: "POST",
    headers: {
      "content-type": "application/json",
      "key": "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",
      "org": "org-5dysQEALkmlmzOv27vZ7",
    },
    body: '"messages": [{"role": "system", "content": "As a personal shopper, your task is to plan an outfit for a specific occasion using up to 3 items, which may include shoes and accessories. Youll be given limited details about the selected items, and your output will be the outfits description. Please make sure to return the information in a format suitable for searching through a search engine."},{"role": "user","content": "Id like an outfit with up to 3 items for an occasion."},{"role": "assistant","content": "Here are three items for you to choose from."}],"temperature": 0.6}'};

  fetch("https://api.openai.com/v1/completions", options).then((response) => response.json()).then((response) => console.log(response))
  .catch((err) => console.error(err));;*/


  curl https://api.openai.com/v1/chat/completions \
  >   -H "Content-Type: application/json" \
  >   -H "Authorization: Bearer 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" \
  >   -d '{
  >      "model": "gpt-3.5-turbo",
  >      "messages": [{"role": "user", "content": "Say this is a test!"}],
  >      "temperature": 0.7
  >    }'
  {"id":"chatcmpl-6wzaVcLzIEio7PRxP6i267TkjRtLV","object":"chat.completion","created":1679517787,"model":"gpt-3.5-turbo-0301","usage":{"prompt_tokens":13,"completion_tokens":6,"total_tokens":19},"choices":[{"message":{"role":"assistant","content":"\n\nThis is a test!"},"finish_reason":"stop","index":0}]}


//   function OpenaiFetchAPI() {
//     console.log("Calling GPT3")
//     var url = "https://api.openai.com/v1/engines/davinci/completions";
//     var bearer = 'Bearer ' + sk-hycQfjgAyXLdU660uS50T3BlbkFJm5NlLdjz6dOlULu0EgU
//     fetch(url, {
//         method: 'POST',
//         headers: {
//             'Authorization': bearer,
//             'Content-Type': 'application/json'
//         },
//         body: JSON.stringify({
//             "prompt": "Once upon a time",
//             "max_tokens": 5,
//             "temperature": 1,
//             "top_p": 1,
//             "n": 1,
//             "stream": false,
//             "logprobs": null,
//             "stop": "\n"
//         })


//     }).then(response => {
//         return response.json()
       
//     }).then(data=>{
//         console.log(data)
//         console.log(typeof data)
//         console.log(Object.keys(data))
//         console.log(data['choices'][0].text)
        
//     })
//         .catch(error => {
//             console.log('Something bad happened ' + error)
//         });

working:
function OpenaiFetchAPI() {
  console.log("Calling GPT3");
  var url = "https://api.openai.com/v1/completions";
  var bearer =
    "Bearer " + "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";
  fetch(url, {
    method: "POST",
    headers: {
      Authorization: bearer,
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
        model: 'text-davinci-003',
      prompt: "who is the author of to kill a mockingbird?",
      max_tokens: 1000,
      temperature: 1.5,
    }),
  })
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      console.log(data);
      console.log(typeof data);
      console.log(Object.keys(data));
      console.log(data["choices"][0].text);
    })
    .catch((error) => {
      console.log("Something bad happened " + error);
    });
}

OpenaiFetchAPI();




funny davinci

function OpenaiFetchAPI() {
  console.log("Calling GPT3");
  var url = "https://api.openai.com/v1/engines/davinci/completions";
  var bearer =
    "Bearer " + "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";
  fetch(url, {
    method: "POST",
    headers: {
      Authorization: bearer,
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      prompt: "who was the first US president?",
      max_tokens: 1000,
      temperature: 0.7,
      top_p: 1,
      n: 1,
      stream: false,
      logprobs: null,
      stop: "\n",
    }),
  })
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      console.log(data);
      console.log(typeof data);
      console.log(Object.keys(data));
      console.log(data["choices"][0].text);
    })
    .catch((error) => {
      console.log("Something bad happened " + error);
    });
}

OpenaiFetchAPI();
